#!/usr/bin/env php

<?php

$applicationPath = realpath(__DIR__ . '/..');
require_once "{$applicationPath}/vendor/autoload.php";

use Discord\Discord;
use Discord\Parts\Channel\Message;
use Discord\WebSockets\Event;
use Dotenv\Dotenv;
use Monolog\Handler\StreamHandler;
use Monolog\Logger;
use QuoteBot\Bot;
use QuoteBot\DiscordMessage;
use QuoteBot\DiscordMessenger;

$dotenv = Dotenv::createImmutable($applicationPath);
$dotenv->safeLoad();
$settings = require_once "{$applicationPath}/config/settings.php";

$logger = new Logger('bot');
$logger->pushHandler(new StreamHandler('php://stdout', $settings['logLevel']));

$discord = new Discord(['token' => $settings['bot']['token'], 'logger' => $logger]);
$discord->on('ready', function (Discord $discord) use ($settings, $logger) {
    $messenger = new DiscordMessenger($discord);
    $bot = new Bot($messenger, $settings, $logger);

    $discord->on(Event::MESSAGE_CREATE, function (Message $message) use ($bot, $logger) {
        try {
            $wrappedMessage = new DiscordMessage($message);
            $bot->handleIncomingMessage($wrappedMessage);
        } catch (Throwable $th) {
            $logger->error($th->getMessage(), $th->getTrace());
        }
    });
});
$discord->run();
